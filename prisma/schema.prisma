// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

enum Course {
  BREAKFAST
  MAIN
  DRINK
  SALAD
  SIDE
  SNACK
  SOUP
  DESSERT
  OTHER
}

model Recipe {
  id            Int       @id @default(autoincrement())
  title         String
  source        String
  sourceUrl     String
  imageUrl      String
  servings      Float
  time          String
  courses       Course[]
  keywords      String[]
  // FIXME: what if we have multiple groups of instructions?
  instructions  String[]
  ingredients   Ingredient[]
  ingreds       String[]  // TODO: we may not need this
  fodmap        Fodmap?
  notes         String[]
  original      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  postedAt      DateTime? @default(now())
}

model Fodmap {
  id          Int       @id @default(autoincrement())
  fructans    Float
  galactans   Float
  lactose     Float
  polyols     Float
  fructose    Float
  recipeId    Int       @unique
  recipe      Recipe    @relation(fields: [recipeId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Ingredient {
  id         Int        @id @default(autoincrement())
  name        String
  amount      Float
  unit        String
  recipeId    Int
  recipe      Recipe    @relation(fields: [recipeId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}